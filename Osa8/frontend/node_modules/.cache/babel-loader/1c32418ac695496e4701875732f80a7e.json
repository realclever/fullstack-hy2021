{"ast":null,"code":"var _jsxFileName = \"/Users/mattimikael/fullstack-hy2021/Osa8/frontend/src/components/Books.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { ALL_BOOKS } from \"../queries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Books = props => {\n  _s();\n\n  const [genress, setGenress] = useState();\n  const result = useQuery(ALL_BOOKS);\n  const genres = [];\n  result.data.allBooks.map(book => {\n    book.genres.map(genre => genres.includes(genre) ? null : genres.push(genre));\n    return null;\n  });\n\n  if (result.loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (!props.show) {\n    return null;\n  }\n\n  const handleGenreSelect = async event => {\n    event.preventDefault();\n\n    if (event.target.value === \"all genres\") {\n      setGenress(null);\n      return;\n    }\n\n    setGenress(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Books\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"placeholder \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      cellSpacing: \"5\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"published\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"genres\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), result.data.allBooks.map(a => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", a.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.author.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.published\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [a.genres.join(\", \"), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, a.title, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"select genre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        value: \"all genres\",\n        onClick: handleGenreSelect,\n        children: \"all genres\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), genres.sort().map(g => /*#__PURE__*/_jsxDEV(\"button\", {\n        value: g,\n        onClick: handleGenreSelect,\n        children: g\n      }, g, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Books, \"32FoBdYPKeEgbPtoXcblC8sNTYM=\", false, function () {\n  return [useQuery];\n});\n\n_c = Books;\nexport default Books;\n\nvar _c;\n\n$RefreshReg$(_c, \"Books\");","map":{"version":3,"sources":["/Users/mattimikael/fullstack-hy2021/Osa8/frontend/src/components/Books.js"],"names":["React","useState","useQuery","ALL_BOOKS","Books","props","genress","setGenress","result","genres","data","allBooks","map","book","genre","includes","push","loading","show","handleGenreSelect","event","preventDefault","target","value","a","title","author","name","published","join","sort","g"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { ALL_BOOKS } from \"../queries\";\n\nconst Books = (props) => {\n  const [genress, setGenress] = useState();\n\n  const result = useQuery(ALL_BOOKS);\n\n  const genres = [];\n\n  result.data.allBooks.map((book) => {\n    book.genres.map((genre) =>\n      genres.includes(genre) ? null : genres.push(genre)\n    );\n    return null;\n  });\n\n  if (result.loading) {\n    return <div>loading...</div>;\n  }\n\n  if (!props.show) {\n    return null;\n  }\n\n  const handleGenreSelect = async (event) => {\n    event.preventDefault();\n\n    if (event.target.value === \"all genres\") {\n      setGenress(null);\n      return;\n    }\n    setGenress(event.target.value);\n  };\n\n  return (\n    <div>\n      <h2>Books</h2>\n      <div>\n        <p>placeholder </p>\n      </div>\n\n      <table cellSpacing=\"5\">\n        <tbody>\n          <tr>\n            <th></th>\n            <th>author</th>\n            <th>published</th>\n            <th>genres</th>\n          </tr>\n          {result.data.allBooks.map((a) => (\n            <tr key={a.title}>\n              <td> {a.title}</td>\n              <td>{a.author.name}</td>\n              <td>{a.published}</td>\n              <td>{a.genres.join(\", \")} </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <h4>select genre</h4>\n      <div>\n        <button value={\"all genres\"} onClick={handleGenreSelect}>\n          {\"all genres\"}\n        </button>\n        {genres.sort().map((g) => (\n          <button key={g} value={g} onClick={handleGenreSelect}>\n            {g}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Books;\n"]},"metadata":{},"sourceType":"module"}