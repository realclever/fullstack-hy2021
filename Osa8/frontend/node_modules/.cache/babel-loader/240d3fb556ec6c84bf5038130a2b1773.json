{"ast":null,"code":"var _jsxFileName = \"/Users/mattimikael/fullstack-hy2021/Osa8/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useApolloClient, useQuery } from \"@apollo/client\";\nimport Authors from \"./components/Authors\";\nimport Books from \"./components/Books\";\nimport NewBook from \"./components/NewBook\";\nimport LoginForm from \"./components/LoginForm\";\nimport { ALL_BOOKS, ALL_AUTHORS } from \"./queries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Notify = ({\n  errorMessage\n}) => {\n  if (!errorMessage) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      color: \"red\"\n    },\n    children: errorMessage\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 10\n  }, this);\n};\n\n_c = Notify;\n\nconst App = () => {\n  _s();\n\n  const [page, setPage] = useState(\"authors\");\n  const [token, setToken] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const client = useApolloClient();\n  const result1 = useQuery(ALL_AUTHORS);\n  const result2 = useQuery(ALL_BOOKS);\n\n  const all = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Books\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        cellSpacing: \"10\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"author\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"published\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), result2.data.allBooks.map(a => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: a.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: a.author.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: a.published\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this)]\n          }, a.title, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  };\n\n  const notify = message => {\n    setErrorMessage(message);\n    setTimeout(() => {\n      setErrorMessage(null);\n    }, 10000);\n  };\n\n  const logout = () => {\n    setToken(null);\n    localStorage.clear();\n    client.resetStore();\n    setPage(\"authors\");\n  };\n\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Notify, {\n        errorMessage: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage(\"authors\"),\n        children: \"authors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage(\"books\"),\n        children: \"books\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage(\"login\"),\n        children: \"login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Authors, {\n        show: page === \"authors\",\n        setError: notify\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"all\", {\n        show: page === \"books\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoginForm, {\n        show: page === \"login\",\n        setToken: setToken,\n        setError: notify\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Notify, {\n      errorMessage: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage(\"authors\"),\n        children: \"authors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage(\"books\"),\n        children: \"books\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage(\"add\"),\n        children: \"add book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: logout,\n        children: \"logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Authors, {\n      show: page === \"authors\",\n      setError: notify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Books, {\n      show: page === \"books\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewBook, {\n      show: page === \"add\",\n      setError: notify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"L5V7tyxQ2qYD2lG9z5nO+YHWTJY=\", false, function () {\n  return [useApolloClient, useQuery, useQuery];\n});\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Notify\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/mattimikael/fullstack-hy2021/Osa8/frontend/src/App.js"],"names":["React","useState","useApolloClient","useQuery","Authors","Books","NewBook","LoginForm","ALL_BOOKS","ALL_AUTHORS","Notify","errorMessage","color","App","page","setPage","token","setToken","setErrorMessage","client","result1","result2","all","data","allBooks","map","a","title","author","name","published","notify","message","setTimeout","logout","localStorage","clear","resetStore"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useApolloClient, useQuery } from \"@apollo/client\";\nimport Authors from \"./components/Authors\";\nimport Books from \"./components/Books\";\nimport NewBook from \"./components/NewBook\";\nimport LoginForm from \"./components/LoginForm\";\nimport { ALL_BOOKS, ALL_AUTHORS } from \"./queries\";\n\nconst Notify = ({ errorMessage }) => {\n  if (!errorMessage) {\n    return null;\n  }\n  return <div style={{ color: \"red\" }}>{errorMessage}</div>;\n};\n\nconst App = () => {\n  const [page, setPage] = useState(\"authors\");\n  const [token, setToken] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const client = useApolloClient();\n\n  const result1 = useQuery(ALL_AUTHORS);\n  const result2 = useQuery(ALL_BOOKS);\n\n  const all = () => {\n    return (\n      <div>\n        <h2>Books</h2>\n\n        <table cellSpacing=\"10\">\n          <tbody>\n            <tr>\n              <th></th>\n              <th>author</th>\n              <th>published</th>\n            </tr>\n            {result2.data.allBooks.map((a) => (\n              <tr key={a.title}>\n                <td>{a.title}</td>\n                <td>{a.author.name}</td>\n                <td>{a.published}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  };\n\n  const notify = (message) => {\n    setErrorMessage(message);\n    setTimeout(() => {\n      setErrorMessage(null);\n    }, 10000);\n  };\n\n  const logout = () => {\n    setToken(null);\n    localStorage.clear();\n    client.resetStore();\n    setPage(\"authors\");\n  };\n\n  if (!token) {\n    return (\n      <div>\n        <Notify errorMessage={errorMessage} />\n\n        <button onClick={() => setPage(\"authors\")}>authors</button>\n        <button onClick={() => setPage(\"books\")}>books</button>\n        <button onClick={() => setPage(\"login\")}>login</button>\n\n        <Authors show={page === \"authors\"} setError={notify} />\n        <all show={page === \"books\"} />\n        <LoginForm\n          show={page === \"login\"}\n          setToken={setToken}\n          setError={notify}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <Notify errorMessage={errorMessage} />\n      <div>\n        <button onClick={() => setPage(\"authors\")}>authors</button>\n        <button onClick={() => setPage(\"books\")}>books</button>\n        <button onClick={() => setPage(\"add\")}>add book</button>\n        <button onClick={logout}>logout</button>\n      </div>\n      <Authors show={page === \"authors\"} setError={notify} />\n      <Books show={page === \"books\"} />\n      <NewBook show={page === \"add\"} setError={notify} />\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}