{"ast":null,"code":"import { gql } from \"@apollo/client\";\nexport const ALL_AUTHORS = gql`\n  query {\n    allAuthors {\n      name\n      born\n      id\n      bookCount\n    }\n  }\n`;\nexport const ALL_BOOKS = gql`\n  query($author: String, $genre: String) {\n    allBooks(author: $author, genre: $genre) {\n      title\n      author {\n        name\n        born\n      }\n      published\n      genres\n    }\n  }\n`;\nexport const CREATE_BOOK = gql`\n  mutation createBook(\n    $title: String!\n    $author: String!\n    $published: Int!\n    $genres: [String!]!\n  ) {\n    addBook(\n      title: $title\n      author: $author\n      published: $published\n      genres: $genres\n    ) {\n      title\n      author {\n        name\n        born\n      }\n      published\n      genres\n    }\n  }\n`;\nexport const EDIT_AUTHOR_BORNYEAR = gql`\n  mutation editAuthor($author: String!, $born: Int!) {\n    editAuthor(name: $author, setBornTo: $born) {\n      name\n      born\n      id\n    }\n  }\n`;\nexport const LOGIN = gql`\n  mutation login($username: String!, $password: String!) {\n    login(username: $username, password: $password) {\n      value\n    }\n  }\n`;","map":{"version":3,"sources":["/Users/mattimikael/fullstack-hy2021/Osa8/frontend/src/queries.js"],"names":["gql","ALL_AUTHORS","ALL_BOOKS","CREATE_BOOK","EDIT_AUTHOR_BORNYEAR","LOGIN"],"mappings":"AAAA,SAASA,GAAT,QAAoB,gBAApB;AAEA,OAAO,MAAMC,WAAW,GAAGD,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATO;AAWP,OAAO,MAAME,SAAS,GAAGF,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZO;AAcP,OAAO,MAAMG,WAAW,GAAGH,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAtBO;AAwBP,OAAO,MAAMI,oBAAoB,GAAGJ,GAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARO;AAUP,OAAO,MAAMK,KAAK,GAAGL,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA,CANO","sourcesContent":["import { gql } from \"@apollo/client\";\n\nexport const ALL_AUTHORS = gql`\n  query {\n    allAuthors {\n      name\n      born\n      id\n      bookCount\n    }\n  }\n`;\n\nexport const ALL_BOOKS = gql`\n  query($author: String, $genre: String) {\n    allBooks(author: $author, genre: $genre) {\n      title\n      author {\n        name\n        born\n      }\n      published\n      genres\n    }\n  }\n`;\n\nexport const CREATE_BOOK = gql`\n  mutation createBook(\n    $title: String!\n    $author: String!\n    $published: Int!\n    $genres: [String!]!\n  ) {\n    addBook(\n      title: $title\n      author: $author\n      published: $published\n      genres: $genres\n    ) {\n      title\n      author {\n        name\n        born\n      }\n      published\n      genres\n    }\n  }\n`;\n\nexport const EDIT_AUTHOR_BORNYEAR = gql`\n  mutation editAuthor($author: String!, $born: Int!) {\n    editAuthor(name: $author, setBornTo: $born) {\n      name\n      born\n      id\n    }\n  }\n`;\n\nexport const LOGIN = gql`\n  mutation login($username: String!, $password: String!) {\n    login(username: $username, password: $password) {\n      value\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}