{"ast":null,"code":"var _jsxFileName = \"/Users/mattimikael/fullstack-hy2021/Osa8/frontend/src/components/Authors.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Authors = props => {\n  _s();\n\n  const [name, setName] = useState();\n  const [born, setBorn] = useState();\n  const ALL_AUTHORS = gql`\n    query {\n      allAuthors {\n        name\n        born\n        bookCount\n      }\n    }\n  `;\n  const result = useQuery(ALL_AUTHORS);\n\n  if (result.loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (!props.show) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"authors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"born\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"books\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), result.data.ALL_AUTHORS.map(a => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.born\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.bookCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)]\n        }, a.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Authors, \"gvrySEB5nGVYb8zbIdCBQuwbvcA=\", false, function () {\n  return [useQuery];\n});\n\n_c = Authors;\nexport default Authors;\n\nvar _c;\n\n$RefreshReg$(_c, \"Authors\");","map":{"version":3,"sources":["/Users/mattimikael/fullstack-hy2021/Osa8/frontend/src/components/Authors.js"],"names":["React","useState","gql","useQuery","Authors","props","name","setName","born","setBorn","ALL_AUTHORS","result","loading","show","data","map","a","bookCount"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,EAAhC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,EAAhC;AAEA,QAAMS,WAAW,GAAGR,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GARE;AAUA,QAAMS,MAAM,GAAGR,QAAQ,CAACO,WAAD,CAAvB;;AAEA,MAAIC,MAAM,CAACC,OAAX,EAAoB;AAClB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAI,CAACP,KAAK,CAACQ,IAAX,EAAiB;AACf,WAAO,IAAP;AACD;;AAED,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BACE;AAAA,gCACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAMGF,MAAM,CAACG,IAAP,CAAYJ,WAAZ,CAAwBK,GAAxB,CAA6BC,CAAD,iBAC3B;AAAA,kCACE;AAAA,sBAAKA,CAAC,CAACV;AAAP;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAKU,CAAC,CAACR;AAAP;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,sBAAKQ,CAAC,CAACC;AAAP;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA,WAASD,CAAC,CAACV,IAAX;AAAA;AAAA;AAAA;AAAA,gBADD,CANH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA7CD;;GAAMF,O;UAcWD,Q;;;KAdXC,O;AA+CN,eAAeA,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\n\nconst Authors = (props) => {\n  const [name, setName] = useState();\n  const [born, setBorn] = useState();\n\n  const ALL_AUTHORS = gql`\n    query {\n      allAuthors {\n        name\n        born\n        bookCount\n      }\n    }\n  `;\n\n  const result = useQuery(ALL_AUTHORS);\n\n  if (result.loading) {\n    return <div>loading...</div>;\n  }\n\n  if (!props.show) {\n    return null;\n  }\n\n  return (\n    <div>\n      <h2>authors</h2>\n      <table>\n        <tbody>\n          <tr>\n            <th></th>\n            <th>born</th>\n            <th>books</th>\n          </tr>\n          {result.data.ALL_AUTHORS.map((a) => (\n            <tr key={a.name}>\n              <td>{a.name}</td>\n              <td>{a.born}</td>\n              <td>{a.bookCount}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Authors;\n"]},"metadata":{},"sourceType":"module"}