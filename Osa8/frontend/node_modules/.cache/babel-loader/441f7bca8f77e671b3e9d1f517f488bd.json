{"ast":null,"code":"var _jsxFileName = \"/Users/mattimikael/fullstack-hy2021/Osa8/frontend/src/components/Authors.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { gql, useMutation, useQuery } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ALL_AUTHORS = gql`\n  query {\n    allAuthors {\n      name\n      born\n      bookCount\n    }\n  }\n`;\nconst EDIT_AUTHOR = gql`\n  mutation editAuthor($name: String!, $born: Int!) {\n    editAuthor(name: $name, setBornTo: $born) {\n      name\n      born\n    }\n  }\n`;\n\nconst Authors = props => {\n  _s();\n\n  const [name, setName] = useState();\n  const [born, setBorn] = useState();\n  const result = useQuery(ALL_AUTHORS);\n  const [changeYear] = useMutation(EDIT_AUTHOR);\n\n  if (result.loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (!props.show) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Authors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"born\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"books\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), result.data.allAuthors.map(a => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: a.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: a.born\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: a.bookCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this)]\n          }, a.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Set birthyear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"name\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n            value: name,\n            onChange: ({\n              target\n            }) => setName(target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"phone\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n            value: phone,\n            onChange: ({\n              target\n            }) => setPhone(target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"change number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}; //end\n\n\n_s(Authors, \"jOSRFZ2PJ0A2N4pQc+FsczCCUM8=\", false, function () {\n  return [useQuery, useMutation];\n});\n\n_c = Authors;\nexport default Authors;\n\nvar _c;\n\n$RefreshReg$(_c, \"Authors\");","map":{"version":3,"sources":["/Users/mattimikael/fullstack-hy2021/Osa8/frontend/src/components/Authors.js"],"names":["React","useState","gql","useMutation","useQuery","ALL_AUTHORS","EDIT_AUTHOR","Authors","props","name","setName","born","setBorn","result","changeYear","loading","show","data","allAuthors","map","a","bookCount","submit","target","value","phone","setPhone"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,GAAT,EAAcC,WAAd,EAA2BC,QAA3B,QAA2C,gBAA3C;;AAEA,MAAMC,WAAW,GAAGH,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AAUA,MAAMI,WAAW,GAAGJ,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;;AASA,MAAMK,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,EAAhC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,EAAhC;AAEA,QAAMY,MAAM,GAAGT,QAAQ,CAACC,WAAD,CAAvB;AAEA,QAAM,CAACS,UAAD,IAAeX,WAAW,CAACG,WAAD,CAAhC;;AAEA,MAAIO,MAAM,CAACE,OAAX,EAAoB;AAClB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAI,CAACP,KAAK,CAACQ,IAAX,EAAiB;AACf,WAAO,IAAP;AACD;;AAED,sBACE;AAAA,4BACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,+BACE;AAAA,kCACE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAMGH,MAAM,CAACI,IAAP,CAAYC,UAAZ,CAAuBC,GAAvB,CAA4BC,CAAD,iBAC1B;AAAA,oCACE;AAAA,wBAAKA,CAAC,CAACX;AAAP;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,wBAAKW,CAAC,CAACT;AAAP;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA,wBAAKS,CAAC,CAACC;AAAP;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA,aAASD,CAAC,CAACX,IAAX;AAAA;AAAA;AAAA;AAAA,kBADD,CANH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAqBE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAM,QAAA,QAAQ,EAAEa,MAAhB;AAAA,gCACE;AAAA,6BACO,GADP,eAEE;AACE,YAAA,KAAK,EAAEb,IADT;AAEE,YAAA,QAAQ,EAAE,CAAC;AAAEc,cAAAA;AAAF,aAAD,KAAgBb,OAAO,CAACa,MAAM,CAACC,KAAR;AAFnC;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AAAA,8BACQ,GADR,eAEE;AACE,YAAA,KAAK,EAAEC,KADT;AAEE,YAAA,QAAQ,EAAE,CAAC;AAAEF,cAAAA;AAAF,aAAD,KAAgBG,QAAQ,CAACH,MAAM,CAACC,KAAR;AAFpC;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,eAeE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YArBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6CD,CA7DD,C,CA6DG;;;GA7DGjB,O;UAIWH,Q,EAEMD,W;;;KANjBI,O;AA+DN,eAAeA,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { gql, useMutation, useQuery } from \"@apollo/client\";\n\nconst ALL_AUTHORS = gql`\n  query {\n    allAuthors {\n      name\n      born\n      bookCount\n    }\n  }\n`;\n\nconst EDIT_AUTHOR = gql`\n  mutation editAuthor($name: String!, $born: Int!) {\n    editAuthor(name: $name, setBornTo: $born) {\n      name\n      born\n    }\n  }\n`;\n\nconst Authors = (props) => {\n  const [name, setName] = useState();\n  const [born, setBorn] = useState();\n\n  const result = useQuery(ALL_AUTHORS);\n\n  const [changeYear] = useMutation(EDIT_AUTHOR);\n\n  if (result.loading) {\n    return <div>loading...</div>;\n  }\n\n  if (!props.show) {\n    return null;\n  }\n\n  return (\n    <div>\n      <div>\n        <h2>Authors</h2>\n        <table>\n          <tbody>\n            <tr>\n              <th></th>\n              <th>born</th>\n              <th>books</th>\n            </tr>\n            {result.data.allAuthors.map((a) => (\n              <tr key={a.name}>\n                <td>{a.name}</td>\n                <td>{a.born}</td>\n                <td>{a.bookCount}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n\n      <div>\n        <h2>Set birthyear</h2>\n\n        <form onSubmit={submit}>\n          <div>\n            name{\" \"}\n            <input\n              value={name}\n              onChange={({ target }) => setName(target.value)}\n            />\n          </div>\n          <div>\n            phone{\" \"}\n            <input\n              value={phone}\n              onChange={({ target }) => setPhone(target.value)}\n            />\n          </div>\n          <button type=\"submit\">change number</button>\n        </form>\n      </div>\n    </div>\n  );\n}; //end\n\nexport default Authors;\n"]},"metadata":{},"sourceType":"module"}