{"ast":null,"code":"var _jsxFileName = \"/Users/mattimikael/fullstack-hy2021/Osa8/frontend/src/components/Recommendations.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { ALL_BOOKS } from \"../queries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Recommendations = ({\n  user,\n  show\n}) => {\n  _s();\n\n  const result = useQuery(ALL_BOOKS, {\n    variables: {\n      genre: user.favoriteGenre\n    }\n  });\n  useEffect(() => {\n    if (result.data === null) {\n      console.log(\"Something went wrong \");\n      console.log(result.data);\n    }\n  }, [result.data]);\n\n  if (result.loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (!show) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Recommendations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"book in your favorite genre \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [user.favoriteGenre, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 39\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"published\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"genres\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), result.data.allBooks.map(a => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", a.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.author.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.published\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [a.genres.join(\", \"), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)]\n        }, a.title, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Recommendations, \"Xg7UAG9z6QkEPTdk4QM/rXxWXfo=\", false, function () {\n  return [useQuery];\n});\n\n_c = Recommendations;\nexport default Recommendations;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recommendations\");","map":{"version":3,"sources":["/Users/mattimikael/fullstack-hy2021/Osa8/frontend/src/components/Recommendations.js"],"names":["React","useEffect","useQuery","ALL_BOOKS","Recommendations","user","show","result","variables","genre","favoriteGenre","data","console","log","loading","allBooks","map","a","title","author","name","published","genres","join"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,SAAT,QAA0B,YAA1B;;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAoB;AAAA;;AAC1C,QAAMC,MAAM,GAAGL,QAAQ,CAACC,SAAD,EAAY;AACjCK,IAAAA,SAAS,EAAE;AAAEC,MAAAA,KAAK,EAAEJ,IAAI,CAACK;AAAd;AADsB,GAAZ,CAAvB;AAIAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,MAAM,CAACI,IAAP,KAAgB,IAApB,EAA0B;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYN,MAAM,CAACI,IAAnB;AACD;AACF,GALQ,EAKN,CAACJ,MAAM,CAACI,IAAR,CALM,CAAT;;AAOA,MAAIJ,MAAM,CAACO,OAAX,EAAoB;AAClB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAI,CAACR,IAAL,EAAW;AACT,WAAO,IAAP;AACD;;AAED,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BACE;AAAA,gEAC8B;AAAA,qBAASD,IAAI,CAACK,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA,gBAD9B,EACqE,GADrE;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE;AAAA,6BACE;AAAA,gCACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAOGH,MAAM,CAACI,IAAP,CAAYI,QAAZ,CAAqBC,GAArB,CAA0BC,CAAD,iBACxB;AAAA,kCACE;AAAA,4BAAMA,CAAC,CAACC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAKD,CAAC,CAACE,MAAF,CAASC;AAAd;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,sBAAKH,CAAC,CAACI;AAAP;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA,uBAAKJ,CAAC,CAACK,MAAF,CAASC,IAAT,CAAc,IAAd,CAAL;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA,WAASN,CAAC,CAACC,KAAX;AAAA;AAAA;AAAA;AAAA,gBADD,CAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CAhDD;;GAAMd,e;UACWF,Q;;;KADXE,e;AAkDN,eAAeA,eAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { ALL_BOOKS } from \"../queries\";\n\nconst Recommendations = ({ user, show }) => {\n  const result = useQuery(ALL_BOOKS, {\n    variables: { genre: user.favoriteGenre },\n  });\n\n  useEffect(() => {\n    if (result.data === null) {\n      console.log(\"Something went wrong \");\n      console.log(result.data);\n    }\n  }, [result.data]);\n\n  if (result.loading) {\n    return <div>loading...</div>;\n  }\n\n  if (!show) {\n    return null;\n  }\n\n  return (\n    <div>\n      <h2>Recommendations</h2>\n      <div>\n        <p>\n          book in your favorite genre <strong>{user.favoriteGenre} </strong>{\" \"}\n        </p>\n      </div>\n      <table>\n        <tbody>\n          <tr>\n            <th>title</th>\n            <th>author</th>\n            <th>published</th>\n            <th>genres</th>\n          </tr>\n          {result.data.allBooks.map((a) => (\n            <tr key={a.title}>\n              <td> {a.title}</td>\n              <td>{a.author.name}</td>\n              <td>{a.published}</td>\n              <td>{a.genres.join(\", \")} </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Recommendations;\n"]},"metadata":{},"sourceType":"module"}