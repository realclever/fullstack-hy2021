{"ast":null,"code":"var _jsxFileName = \"/Users/mattimikael/fullstack-hy2021/Osa8/frontend/src/components/NewBook.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { CREATE_BOOK, ALL_BOOKS, ALL_AUTHORS } from \"../queries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewBook = ({\n  setPage,\n  ...props\n}) => {\n  _s();\n\n  const [title, setTitle] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [published, setPublished] = useState(\"\");\n  const [genre, setGenre] = useState(\"\");\n  const [genres, setGenres] = useState([]);\n  const [createBook] = useMutation(CREATE_BOOK, {\n    refetchQueries: [{\n      query: ALL_BOOKS\n    }, {\n      query: ALL_AUTHORS\n    }],\n    onError: error => {\n      props.setError(error.graphQLErrors[0].message);\n    }\n  }); //refreshes books list when adding a new book\n  //refreshes authors when adding a new book\n\n  if (!props.show) return null;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    createBook({\n      variables: {\n        title,\n        author,\n        published,\n        genres\n      }\n    });\n    console.log(\"a new book was just added...\");\n    setTitle(\"\");\n    setAuthor(\"\");\n    setPublished(\"\");\n    setGenres([]);\n    setGenre(\"\");\n    setPage(\"books\");\n  };\n\n  const addGenre = () => {\n    setGenres(genres.concat(genre));\n    setGenre(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add book\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          value: title,\n          onChange: ({\n            target\n          }) => setTitle(target.value),\n          placeholder: \"title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          value: author,\n          onChange: ({\n            target\n          }) => setAuthor(target.value),\n          placeholder: \"author\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: published,\n          onChange: ({\n            target\n          }) => setPublished(Number(target.value)) //error fix\n          ,\n          placeholder: \"published\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: genre,\n          onChange: ({\n            target\n          }) => setGenre(target.value),\n          placeholder: \"genre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addGenre,\n          type: \"button\",\n          children: \"add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"selected genres: \", genres.join(\" \")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"create book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewBook, \"u3nsQTmCKa7aM2/K2ulN9q4vxI0=\", false, function () {\n  return [useMutation];\n});\n\n_c = NewBook;\nexport default NewBook;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewBook\");","map":{"version":3,"sources":["/Users/mattimikael/fullstack-hy2021/Osa8/frontend/src/components/NewBook.js"],"names":["React","useState","useMutation","CREATE_BOOK","ALL_BOOKS","ALL_AUTHORS","NewBook","setPage","props","title","setTitle","author","setAuthor","published","setPublished","genre","setGenre","genres","setGenres","createBook","refetchQueries","query","onError","error","setError","graphQLErrors","message","show","handleSubmit","event","preventDefault","variables","console","log","addGenre","concat","target","value","Number","join"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { CREATE_BOOK, ALL_BOOKS, ALL_AUTHORS } from \"../queries\";\n\nconst NewBook = ({ setPage, ...props }) => {\n  const [title, setTitle] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [published, setPublished] = useState(\"\");\n  const [genre, setGenre] = useState(\"\");\n  const [genres, setGenres] = useState([]);\n\n  const [createBook] = useMutation(CREATE_BOOK, {\n    refetchQueries: [{ query: ALL_BOOKS }, { query: ALL_AUTHORS }],\n    onError: (error) => {\n      props.setError(error.graphQLErrors[0].message);\n    },\n  });\n  //refreshes books list when adding a new book\n  //refreshes authors when adding a new book\n\n  if (!props.show) return null;\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    createBook({ variables: { title, author, published, genres } });\n    console.log(\"a new book was just added...\");\n    setTitle(\"\");\n    setAuthor(\"\");\n    setPublished(\"\");\n    setGenres([]);\n    setGenre(\"\");\n    setPage(\"books\");\n  };\n\n  const addGenre = () => {\n    setGenres(genres.concat(genre));\n    setGenre(\"\");\n  };\n\n  return (\n    <div>\n      <h2>Add book</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <input\n            value={title}\n            onChange={({ target }) => setTitle(target.value)}\n            placeholder=\"title\"\n          />\n        </div>\n        <div>\n          <input\n            value={author}\n            onChange={({ target }) => setAuthor(target.value)}\n            placeholder=\"author\"\n          />\n        </div>\n        <div>\n          <input\n            type=\"number\"\n            value={published}\n            onChange={({ target }) => setPublished(Number(target.value))} //error fix\n            placeholder=\"published\"\n          />\n        </div>\n        <div>\n          <input\n            value={genre}\n            onChange={({ target }) => setGenre(target.value)}\n            placeholder=\"genre\"\n          />\n          <button onClick={addGenre} type=\"button\">\n            add\n          </button>\n        </div>\n        <p>selected genres: {genres.join(\" \")}</p>\n\n        <button type=\"submit\">create book</button>\n      </form>\n    </div>\n  );\n};\n\nexport default NewBook;\n"]},"metadata":{},"sourceType":"module"}