{"ast":null,"code":"var _jsxFileName = \"/Users/mattimikael/fullstack-hy2021/Osa8/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useApolloClient, useQuery } from \"@apollo/client\";\nimport Authors from \"./components/Authors\";\nimport Books from \"./components/Books\";\nimport NewBook from \"./components/NewBook\";\nimport Login from \"./components/Login\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Notify = ({\n  errorMessage\n}) => {\n  if (!errorMessage) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      color: \"red\"\n    },\n    children: errorMessage\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 10\n  }, this);\n};\n\n_c = Notify;\n\nconst App = () => {\n  _s();\n\n  const [page, setPage] = useState(\"authors\");\n  const [token, setToken] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const client = useApolloClient();\n\n  const notify = message => {\n    setErrorMessage(message);\n    setTimeout(() => {\n      setErrorMessage(null);\n    }, 10000);\n  };\n\n  const logout = () => {\n    setToken(null);\n    localStorage.clear();\n    client.resetStore();\n    setPage(\"authors\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage(\"authors\"),\n        children: \"authors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage(\"books\"),\n        children: \"books\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), token ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage(\"add\"),\n        children: \"add book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage(\"login\"),\n        children: \" login \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), token && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: logout,\n        children: \" logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Authors, {\n      show: page === \"authors\",\n      notify: notify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Books, {\n      show: page === \"books\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewBook, {\n      show: page === \"add\",\n      setError: notify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Login, {\n      show: page === \"login\",\n      setToken: setToken,\n      setError: notify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"2akV/5StU0LPbNYeU4dWJ7VKXoY=\", false, function () {\n  return [useApolloClient];\n});\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Notify\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/mattimikael/fullstack-hy2021/Osa8/frontend/src/App.js"],"names":["React","useState","useApolloClient","useQuery","Authors","Books","NewBook","Login","Notify","errorMessage","color","App","page","setPage","token","setToken","setErrorMessage","client","notify","message","setTimeout","logout","localStorage","clear","resetStore"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useApolloClient, useQuery } from \"@apollo/client\";\nimport Authors from \"./components/Authors\";\nimport Books from \"./components/Books\";\nimport NewBook from \"./components/NewBook\";\nimport Login from \"./components/Login\";\n\nconst Notify = ({ errorMessage }) => {\n  if (!errorMessage) {\n    return null;\n  }\n  return <div style={{ color: \"red\" }}>{errorMessage}</div>;\n};\n\nconst App = () => {\n  const [page, setPage] = useState(\"authors\");\n  const [token, setToken] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const client = useApolloClient();\n\n  const notify = (message) => {\n    setErrorMessage(message);\n    setTimeout(() => {\n      setErrorMessage(null);\n    }, 10000);\n  };\n\n  const logout = () => {\n    setToken(null);\n    localStorage.clear();\n    client.resetStore();\n    setPage(\"authors\");\n  };\n\n  return (\n    <div>\n      <div>\n        <button onClick={() => setPage(\"authors\")}>authors</button>\n        <button onClick={() => setPage(\"books\")}>books</button>\n        {token ? (\n          <button onClick={() => setPage(\"add\")}>add book</button>\n        ) : (\n          <button onClick={() => setPage(\"login\")}> login </button>\n        )}\n        {token && <button onClick={logout}> logout</button>}\n      </div>\n\n      <Authors show={page === \"authors\"} notify={notify} />\n\n      <Books show={page === \"books\"} />\n\n      <NewBook show={page === \"add\"} setError={notify} />\n\n      <Login show={page === \"login\"} setToken={setToken} setError={notify} />\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}