{"ast":null,"code":"var _jsxFileName = \"/Users/mattimikael/fullstack-hy2021/Osa8/frontend/src/components/Recommendations.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useLazyQuery, useQuery } from \"@apollo/client\";\nimport { LOGGED_USER, ALL_BOOKS, ALL_AUTHORS } from \"../queries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Recommendations = props => {\n  _s();\n\n  const [book, setBooks] = useState();\n  const user = useQuery(LOGGED_USER);\n  const [getBooks, bookResult] = useLazyQuery(ALL_BOOKS);\n\n  const genre = () => {\n    if (user.data) {\n      user.data = user.data.me;\n      return user.data;\n    } else {\n      return user.data.me.favoriteGenre;\n    }\n  };\n\n  const genres = user.data && user.data.me ? user.data.me.favoriteGenre : null;\n  useEffect(() => {\n    if (user.data) {\n      getBooks({\n        variables: {\n          genre\n        }\n      });\n    }\n  }, [user.data]); //eslint-disable-line\n\n  useEffect(() => {\n    if (bookResult.data) {\n      setBooks(bookResult.data.allBooks);\n    }\n  }, [bookResult.data]);\n\n  if (user.loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (!props.show) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Recommendations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"books in your favorite genre \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: genre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 40\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"published\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"genres\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), book.map(a => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", a.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.author.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.published\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)]\n        }, a.title, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Recommendations, \"Phr7Nva7dR4DiTqjcZOKXvX7t48=\", false, function () {\n  return [useQuery, useLazyQuery];\n});\n\n_c = Recommendations;\nexport default Recommendations;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recommendations\");","map":{"version":3,"sources":["/Users/mattimikael/fullstack-hy2021/Osa8/frontend/src/components/Recommendations.js"],"names":["React","useEffect","useState","useLazyQuery","useQuery","LOGGED_USER","ALL_BOOKS","ALL_AUTHORS","Recommendations","props","book","setBooks","user","getBooks","bookResult","genre","data","me","favoriteGenre","genres","variables","allBooks","loading","show","map","a","title","author","name","published"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useLazyQuery, useQuery } from \"@apollo/client\";\nimport { LOGGED_USER, ALL_BOOKS, ALL_AUTHORS } from \"../queries\";\n\nconst Recommendations = (props) => {\n  const [book, setBooks] = useState();\n  const user = useQuery(LOGGED_USER);\n\n  const [getBooks, bookResult] = useLazyQuery(ALL_BOOKS);\n\n  const genre = () => {\n    if (user.data) {\n      user.data = user.data.me;\n      return user.data;\n    } else {\n      return user.data.me.favoriteGenre;\n    }\n  };\n\n  const genres = user.data && user.data.me ? user.data.me.favoriteGenre : null;\n\n  useEffect(() => {\n    if (user.data) {\n      getBooks({ variables: { genre } });\n    }\n  }, [user.data]); //eslint-disable-line\n\n  useEffect(() => {\n    if (bookResult.data) {\n      setBooks(bookResult.data.allBooks);\n    }\n  }, [bookResult.data]);\n\n  if (user.loading) {\n    return <div>loading...</div>;\n  }\n\n  if (!props.show) {\n    return null;\n  }\n\n  return (\n    <div>\n      <h2>Recommendations</h2>\n      <div>\n        <p>\n          books in your favorite genre <strong>{genre}</strong>{\" \"}\n        </p>\n      </div>\n      <table>\n        <tbody>\n          <tr>\n            <th>title</th>\n            <th>author</th>\n            <th>published</th>\n            <th>genres</th>\n          </tr>\n          {book.map((a) => (\n            <tr key={a.title}>\n              <td> {a.title}</td>\n              <td>{a.author.name}</td>\n              <td>{a.published}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Recommendations;\n"]},"metadata":{},"sourceType":"module"}