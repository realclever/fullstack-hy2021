{"ast":null,"code":"var _jsxFileName = \"/Users/mattimikael/fullstack-hy2021/Osa8/frontend/src/components/Recommendations.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\nimport { ALL_BOOKS, LOGGED_USER } from \"../queries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Recommendations = ({\n  user,\n  ...props\n}) => {\n  _s();\n\n  const [books, setBooks] = useState([]);\n  const result = useQuery(LOGGED_USER);\n  const [getBooks, booksResult] = useLazyQuery(ALL_BOOKS);\n  useEffect(() => {\n    if (result.data) {\n      getBooks({\n        variables: {\n          genre: result.data.me.favoriteGenre\n        }\n      });\n    }\n  }, [result.data]); //eslint-disable-line\n\n  useEffect(() => {\n    if (booksResult.data) {\n      setBooks(booksResult.data.allBooks);\n    }\n  }, [booksResult.data]);\n\n  if (result.loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Recommendations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"em\", {\n        children: [\"in your favorite genre \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: user.favoriteGenre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"published\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"genres\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), books.map(b => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", b.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: b.author.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: b.published\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [b.genres.join(\", \"), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)]\n        }, b.title, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Recommendations, \"1T6BCScU3rQlT34aPhF6k0sMPlU=\", false, function () {\n  return [useQuery, useLazyQuery];\n});\n\n_c = Recommendations;\nexport default Recommendations;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recommendations\");","map":{"version":3,"sources":["/Users/mattimikael/fullstack-hy2021/Osa8/frontend/src/components/Recommendations.js"],"names":["React","useEffect","useState","useQuery","useLazyQuery","ALL_BOOKS","LOGGED_USER","Recommendations","user","props","books","setBooks","result","getBooks","booksResult","data","variables","genre","me","favoriteGenre","allBooks","loading","map","b","title","author","name","published","genres","join"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,gBAAvC;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,YAAvC;;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQ,KAAGC;AAAX,CAAD,KAAwB;AAAA;;AAC9C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMU,MAAM,GAAGT,QAAQ,CAACG,WAAD,CAAvB;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BV,YAAY,CAACC,SAAD,CAA5C;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,MAAM,CAACG,IAAX,EAAiB;AACfF,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,SAAS,EAAE;AAAEC,UAAAA,KAAK,EAAEL,MAAM,CAACG,IAAP,CAAYG,EAAZ,CAAeC;AAAxB;AAAb,OAAD,CAAR;AACD;AACF,GAJQ,EAIN,CAACP,MAAM,CAACG,IAAR,CAJM,CAAT,CAN8C,CAU3B;;AAEnBd,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,WAAW,CAACC,IAAhB,EAAsB;AACpBJ,MAAAA,QAAQ,CAACG,WAAW,CAACC,IAAZ,CAAiBK,QAAlB,CAAR;AACD;AACF,GAJQ,EAIN,CAACN,WAAW,CAACC,IAAb,CAJM,CAAT;;AAMA,MAAIH,MAAM,CAACS,OAAX,EAAoB;AAClB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BACE;AAAA,2DACyB;AAAA,oBAASb,IAAI,CAACW;AAAd;AAAA;AAAA;AAAA;AAAA,gBADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAA,6BACE;AAAA,gCACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAOGT,KAAK,CAACY,GAAN,CAAWC,CAAD,iBACT;AAAA,kCACE;AAAA,4BAAMA,CAAC,CAACC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAKD,CAAC,CAACE,MAAF,CAASC;AAAd;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,sBAAKH,CAAC,CAACI;AAAP;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA,uBAAKJ,CAAC,CAACK,MAAF,CAASC,IAAT,CAAc,IAAd,CAAL;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA,WAASN,CAAC,CAACC,KAAX;AAAA;AAAA;AAAA;AAAA,gBADD,CAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CAnDD;;GAAMjB,e;UAGWJ,Q,EACiBC,Y;;;KAJ5BG,e;AAqDN,eAAeA,eAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\nimport { ALL_BOOKS, LOGGED_USER } from \"../queries\";\n\nconst Recommendations = ({ user, ...props }) => {\n  const [books, setBooks] = useState([]);\n\n  const result = useQuery(LOGGED_USER);\n  const [getBooks, booksResult] = useLazyQuery(ALL_BOOKS);\n\n  useEffect(() => {\n    if (result.data) {\n      getBooks({ variables: { genre: result.data.me.favoriteGenre } });\n    }\n  }, [result.data]); //eslint-disable-line\n\n  useEffect(() => {\n    if (booksResult.data) {\n      setBooks(booksResult.data.allBooks);\n    }\n  }, [booksResult.data]);\n\n  if (result.loading) {\n    return <div>Loading..</div>;\n  }\n\n  return (\n    <div>\n      <h2>Recommendations</h2>\n      <div>\n        <em>\n          in your favorite genre <strong>{user.favoriteGenre}</strong>\n        </em>\n      </div>\n      <br></br>\n      <table>\n        <tbody>\n          <tr>\n            <th>title</th>\n            <th>author</th>\n            <th>published</th>\n            <th>genres</th>\n          </tr>\n          {books.map((b) => (\n            <tr key={b.title}>\n              <td> {b.title}</td>\n              <td>{b.author.name}</td>\n              <td>{b.published}</td>\n              <td>{b.genres.join(\", \")} </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Recommendations;\n"]},"metadata":{},"sourceType":"module"}