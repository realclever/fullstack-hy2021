{"ast":null,"code":"var _jsxFileName = \"/Users/mattimikael/fullstack-hy2021/Osa8/frontend/src/components/Recommendations.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { ALL_BOOKS } from \"../queries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Recommendations = ({\n  user,\n  show,\n  setError\n}) => {\n  _s();\n\n  const [books, setBooks] = useState(\"\");\n  const result = useQuery(ALL_BOOKS, {\n    //refetchQueries: [{ query: ALL_BOOKS }],\n    pollInterval: 2000,\n    variables: {\n      genre: user.favoriteGenre\n    },\n    onError: error => {\n      setError(error.graphQLErrors[0].message);\n    }\n  });\n  useEffect(() => {\n    if (result.data) {\n      setBooks(result.data.allBooks);\n    }\n  }, [result]);\n  if (!books) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"wait..loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 22\n  }, this);\n  if (!show) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Recommendations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"books in your favorite genre \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: user.favoriteGenre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"published\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"genres\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), books.map(b => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", b.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: b.author.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: b.published\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [b.genres.join(\", \"), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)]\n        }, b.title, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Recommendations, \"l3S41yNwbwHsqgDI9xdrnb5fGNI=\", false, function () {\n  return [useQuery];\n});\n\n_c = Recommendations;\nexport default Recommendations;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recommendations\");","map":{"version":3,"sources":["/Users/mattimikael/fullstack-hy2021/Osa8/frontend/src/components/Recommendations.js"],"names":["React","useEffect","useState","useQuery","ALL_BOOKS","Recommendations","user","show","setError","books","setBooks","result","pollInterval","variables","genre","favoriteGenre","onError","error","graphQLErrors","message","data","allBooks","map","b","title","author","name","published","genres","join"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,SAAT,QAA0B,YAA1B;;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAR;AAAcC,EAAAA;AAAd,CAAD,KAA8B;AAAA;;AACpD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMS,MAAM,GAAGR,QAAQ,CAACC,SAAD,EAAY;AACjC;AACAQ,IAAAA,YAAY,EAAE,IAFmB;AAGjCC,IAAAA,SAAS,EAAE;AAAEC,MAAAA,KAAK,EAAER,IAAI,CAACS;AAAd,KAHsB;AAIjCC,IAAAA,OAAO,EAAGC,KAAD,IAAW;AAClBT,MAAAA,QAAQ,CAACS,KAAK,CAACC,aAAN,CAAoB,CAApB,EAAuBC,OAAxB,CAAR;AACD;AANgC,GAAZ,CAAvB;AASAlB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,MAAM,CAACS,IAAX,EAAiB;AACfV,MAAAA,QAAQ,CAACC,MAAM,CAACS,IAAP,CAAYC,QAAb,CAAR;AACD;AACF,GAJQ,EAIN,CAACV,MAAD,CAJM,CAAT;AAMA,MAAI,CAACF,KAAL,EAAY,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEZ,MAAI,CAACF,IAAL,EAAW,OAAO,IAAP;AAEX,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BACE;AAAA,iEAC+B;AAAA,oBAASD,IAAI,CAACS;AAAd;AAAA;AAAA;AAAA;AAAA,gBAD/B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE;AAAA,6BACE;AAAA,gCACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAOGN,KAAK,CAACa,GAAN,CAAWC,CAAD,iBACT;AAAA,kCACE;AAAA,4BAAMA,CAAC,CAACC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAKD,CAAC,CAACE,MAAF,CAASC;AAAd;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,sBAAKH,CAAC,CAACI;AAAP;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA,uBAAKJ,CAAC,CAACK,MAAF,CAASC,IAAT,CAAc,IAAd,CAAL;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA,WAASN,CAAC,CAACC,KAAX;AAAA;AAAA;AAAA;AAAA,gBADD,CAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CAlDD;;GAAMnB,e;UAGWF,Q;;;KAHXE,e;AAoDN,eAAeA,eAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { ALL_BOOKS } from \"../queries\";\n\nconst Recommendations = ({ user, show, setError }) => {\n  const [books, setBooks] = useState(\"\");\n\n  const result = useQuery(ALL_BOOKS, {\n    //refetchQueries: [{ query: ALL_BOOKS }],\n    pollInterval: 2000,\n    variables: { genre: user.favoriteGenre },\n    onError: (error) => {\n      setError(error.graphQLErrors[0].message);\n    },\n  });\n\n  useEffect(() => {\n    if (result.data) {\n      setBooks(result.data.allBooks);\n    }\n  }, [result]);\n\n  if (!books) return <div>wait..loading...</div>;\n\n  if (!show) return null;\n\n  return (\n    <div>\n      <h2>Recommendations</h2>\n      <div>\n        <p>\n          books in your favorite genre <strong>{user.favoriteGenre}</strong>\n        </p>\n      </div>\n      <table>\n        <tbody>\n          <tr>\n            <th>title</th>\n            <th>author</th>\n            <th>published</th>\n            <th>genres</th>\n          </tr>\n          {books.map((b) => (\n            <tr key={b.title}>\n              <td> {b.title}</td>\n              <td>{b.author.name}</td>\n              <td>{b.published}</td>\n              <td>{b.genres.join(\", \")} </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Recommendations;\n"]},"metadata":{},"sourceType":"module"}