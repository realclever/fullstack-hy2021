{"ast":null,"code":"var _jsxFileName = \"/Users/mattimikael/fullstack-hy2021/Osa8/frontend/src/components/BirthEdit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport Select from \"react-select\";\nimport { ALL_AUTHORS, EDIT_AUTHOR_BORNYEAR } from \"../queries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BirthEdit = ({\n  setPage,\n  ...props\n}) => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [born, setBorn] = useState(\"\");\n  const result = useQuery(ALL_AUTHORS);\n  const [changeYear, results] = useMutation(EDIT_AUTHOR_BORNYEAR, {\n    refetchQueries: [{\n      query: ALL_AUTHORS\n    }],\n    onError: error => {\n      props.setError(error.graphQLErrors[0].message);\n    }\n  });\n  useEffect(() => {\n    if (results.data && results.data.editAuthor === null) {\n      console.log(\"Something went wrong when changing birth year\");\n      console.log(results.data);\n      console.log(results.data.editAuthor);\n    }\n  }, [results.data]);\n  if (!props.show) return null;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    changeYear({\n      variables: {\n        name,\n        born\n      }\n    });\n    setName(\"\");\n    setBorn(\"\");\n    props.setError(\"done\");\n    setPage(\"authors\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit birthyear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"name\", /*#__PURE__*/_jsxDEV(Select, {\n            defaultValue: name,\n            onChange: ({\n              value\n            }) => setName(value),\n            options: result.data.allAuthors.map(b => ({\n              value: b.name,\n              label: b.name\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"set year\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: born,\n            onChange: ({\n              target\n            }) => setBorn(Number(target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"update author\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}; //end\n\n\n_s(BirthEdit, \"JjACMRxUsFVMNSq5zsYkUrIA+j0=\", false, function () {\n  return [useQuery, useMutation];\n});\n\n_c = BirthEdit;\nexport default BirthEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"BirthEdit\");","map":{"version":3,"sources":["/Users/mattimikael/fullstack-hy2021/Osa8/frontend/src/components/BirthEdit.js"],"names":["React","useState","useEffect","useMutation","useQuery","Select","ALL_AUTHORS","EDIT_AUTHOR_BORNYEAR","BirthEdit","setPage","props","name","setName","born","setBorn","result","changeYear","results","refetchQueries","query","onError","error","setError","graphQLErrors","message","data","editAuthor","console","log","show","handleSubmit","event","preventDefault","variables","value","allAuthors","map","b","label","target","Number"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport Select from \"react-select\";\nimport { ALL_AUTHORS, EDIT_AUTHOR_BORNYEAR } from \"../queries\";\n\nconst BirthEdit = ({ setPage, ...props }) => {\n  const [name, setName] = useState(\"\");\n  const [born, setBorn] = useState(\"\");\n\n  const result = useQuery(ALL_AUTHORS);\n\n  const [changeYear, results] = useMutation(EDIT_AUTHOR_BORNYEAR, {\n    refetchQueries: [{ query: ALL_AUTHORS }],\n    onError: (error) => {\n      props.setError(error.graphQLErrors[0].message);\n    },\n  });\n\n  useEffect(() => {\n    if (results.data && results.data.editAuthor === null) {\n      console.log(\"Something went wrong when changing birth year\");\n      console.log(results.data);\n      console.log(results.data.editAuthor);\n    }\n  }, [results.data]);\n\n  if (!props.show) return null;\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    changeYear({ variables: { name, born } });\n    setName(\"\");\n    setBorn(\"\");\n    props.setError(\"done\");\n    setPage(\"authors\");\n  };\n\n  return (\n    <div>\n      <div>\n        <h3>Edit birthyear</h3>\n        <form onSubmit={handleSubmit}>\n          <div>\n            name\n            <Select\n              defaultValue={name}\n              onChange={({ value }) => setName(value)}\n              options={result.data.allAuthors.map((b) => ({\n                value: b.name,\n                label: b.name,\n              }))}\n            ></Select>\n          </div>\n          <div>\n            set year\n            <input\n              type=\"number\"\n              value={born}\n              onChange={({ target }) => setBorn(Number(target.value))}\n            ></input>\n          </div>\n          <button type=\"submit\">update author</button>\n        </form>\n      </div>\n    </div>\n  );\n}; //end\n\nexport default BirthEdit;\n"]},"metadata":{},"sourceType":"module"}