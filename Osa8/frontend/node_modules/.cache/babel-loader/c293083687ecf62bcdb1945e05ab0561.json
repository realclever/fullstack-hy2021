{"ast":null,"code":"var _jsxFileName = \"/Users/mattimikael/fullstack-hy2021/Osa8/frontend/src/components/Authors.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\nimport { ALL_AUTHORS, EDIT_AUTHOR_BORNYEAR } from \"../queries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Authors = props => {\n  _s();\n\n  const [authors, setAuthors] = useState([]);\n  const [getAuthors, result] = useLazyQuery(ALL_AUTHORS);\n  const [setBirthYear, updateResult] = useMutation(EDIT_AUTHOR_BORNYEAR, {\n    refetchQueries: [{\n      query: ALL_AUTHORS\n    }]\n  });\n  const [birthYear, setBirthyear] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  useEffect(() => {\n    getAuthors();\n  }, []);\n  useEffect(() => {\n    if (result.data) {\n      setAuthors(result.data.allAuthors);\n      setAuthor(result.data.allAuthors[0].name);\n    }\n  }, [result]);\n  useEffect(() => {\n    if (updateResult.data && updateResult.data.editAuthor === null) {\n      props.notify(\"Author not found\");\n    }\n  }, [updateResult.data]);\n\n  if (!props.show) {\n    return null;\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setBirthYear({\n      variables: {\n        author,\n        birthYear\n      }\n    });\n    setBirthyear(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"authors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"born\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"books\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), authors.map(a => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: a.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: a.born\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: a.bookCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this)]\n          }, a.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" set birthyear \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"name\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: author,\n            onChange: ({\n              target\n            }) => setAuthor(target.value),\n            children: authors.map(a => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: a.name,\n              children: [\" \", a.name, \" \"]\n            }, a.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"birthyear\", /*#__PURE__*/_jsxDEV(\"input\", {\n            value: birthYear,\n            onChange: ({\n              target\n            }) => setBirthyear(parseInt(target.value)),\n            type: \"number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"update author \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Authors, \"vsvdlgIWjS8cl9Y4BonYcusFj1k=\", false, function () {\n  return [useLazyQuery, useMutation];\n});\n\n_c = Authors;\nexport default Authors;\n\nvar _c;\n\n$RefreshReg$(_c, \"Authors\");","map":{"version":3,"sources":["/Users/mattimikael/fullstack-hy2021/Osa8/frontend/src/components/Authors.js"],"names":["React","useState","useEffect","useLazyQuery","useMutation","ALL_AUTHORS","EDIT_AUTHOR_BORNYEAR","Authors","props","authors","setAuthors","getAuthors","result","setBirthYear","updateResult","refetchQueries","query","birthYear","setBirthyear","author","setAuthor","data","allAuthors","name","editAuthor","notify","show","handleSubmit","e","preventDefault","variables","map","a","born","bookCount","target","value","parseInt"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\nimport { ALL_AUTHORS, EDIT_AUTHOR_BORNYEAR } from \"../queries\";\n\nconst Authors = (props) => {\n  const [authors, setAuthors] = useState([]);\n  const [getAuthors, result] = useLazyQuery(ALL_AUTHORS);\n  const [setBirthYear, updateResult] = useMutation(EDIT_AUTHOR_BORNYEAR, {\n    refetchQueries: [{ query: ALL_AUTHORS }],\n  });\n  const [birthYear, setBirthyear] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n\n  useEffect(() => {\n    getAuthors();\n  }, []);\n\n  useEffect(() => {\n    if (result.data) {\n      setAuthors(result.data.allAuthors);\n      setAuthor(result.data.allAuthors[0].name);\n    }\n  }, [result]);\n\n  useEffect(() => {\n    if (updateResult.data && updateResult.data.editAuthor === null) {\n      props.notify(\"Author not found\");\n    }\n  }, [updateResult.data]);\n  if (!props.show) {\n    return null;\n  }\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setBirthYear({ variables: { author, birthYear } });\n    setBirthyear(\"\");\n  };\n\n  return (\n    <div>\n      <div>\n        <h2>authors</h2>\n        <table>\n          <tbody>\n            <tr>\n              <th></th>\n              <th>born</th>\n              <th>books</th>\n            </tr>\n            {authors.map((a) => (\n              <tr key={a.name}>\n                <td>{a.name}</td>\n                <td>{a.born}</td>\n                <td>{a.bookCount}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n\n      <div>\n        <h2> set birthyear </h2>\n        <form onSubmit={handleSubmit}>\n          <div>\n            name\n            <select\n              value={author}\n              onChange={({ target }) => setAuthor(target.value)}\n            >\n              {authors.map((a) => (\n                <option key={a.name} value={a.name}>\n                  {\" \"}\n                  {a.name}{\" \"}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div>\n            birthyear\n            <input\n              value={birthYear}\n              onChange={({ target }) => setBirthyear(parseInt(target.value))}\n              type=\"number\"\n            />\n          </div>\n          <button type=\"submit\">update author </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Authors;\n"]},"metadata":{},"sourceType":"module"}