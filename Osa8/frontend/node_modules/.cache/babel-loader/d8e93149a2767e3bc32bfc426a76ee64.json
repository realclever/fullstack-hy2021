{"ast":null,"code":"var _jsxFileName = \"/Users/mattimikael/fullstack-hy2021/Osa8/frontend/src/components/Authors.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { ALL_AUTHORS, EDIT_AUTHOR } from \"../queries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Authors = props => {\n  _s();\n\n  const [name, setName] = useState();\n  const [born, setBorn] = useState();\n  const result = useQuery(ALL_AUTHORS);\n  const [changeYear, results] = useMutation(EDIT_AUTHOR, {\n    refetchQueries: [{\n      query: ALL_AUTHORS\n    }],\n    onError: error => {\n      setError(error.graphQLErrors[0].message);\n    }\n  });\n\n  const submit = async event => {\n    event.preventDefault();\n    changeYear({\n      variables: {\n        name,\n        born\n      }\n    });\n    setName(\"\");\n    setBorn(\"\");\n  };\n\n  useEffect(() => {\n    if (results.data && results.data.editAuthor === null) {\n      console.log(\"wow\");\n    }\n  }, [results.data]);\n\n  if (result.loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (!props.show) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Authors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"born\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"books\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), result.data.allAuthors.map(a => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: a.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: a.born\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: a.bookCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this)]\n          }, a.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Set birthyear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            value: name,\n            onChange: ({\n              target\n            }) => setName(target.value),\n            placeholder: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            value: born,\n            onChange: ({\n              target\n            }) => setBorn(Number(target.value)),\n            placeholder: \"born\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"update author\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}; //end\n\n\n_s(Authors, \"ViXFPaiz736nBF9dWnDF2o0bq/g=\", false, function () {\n  return [useQuery, useMutation];\n});\n\n_c = Authors;\nexport default Authors;\n\nvar _c;\n\n$RefreshReg$(_c, \"Authors\");","map":{"version":3,"sources":["/Users/mattimikael/fullstack-hy2021/Osa8/frontend/src/components/Authors.js"],"names":["React","useState","useEffect","useMutation","useQuery","ALL_AUTHORS","EDIT_AUTHOR","Authors","props","name","setName","born","setBorn","result","changeYear","results","refetchQueries","query","onError","error","setError","graphQLErrors","message","submit","event","preventDefault","variables","data","editAuthor","console","log","loading","show","allAuthors","map","a","bookCount","target","value","Number"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { ALL_AUTHORS, EDIT_AUTHOR } from \"../queries\";\n\nconst Authors = (props) => {\n  const [name, setName] = useState();\n  const [born, setBorn] = useState();\n\n  const result = useQuery(ALL_AUTHORS);\n\n  const [changeYear, results] = useMutation(EDIT_AUTHOR, {\n    refetchQueries: [{ query: ALL_AUTHORS }],\n    onError: (error) => {\n      setError(error.graphQLErrors[0].message);\n    },\n  });\n\n  const submit = async (event) => {\n    event.preventDefault();\n    changeYear({ variables: { name, born } });\n    setName(\"\");\n    setBorn(\"\");\n  };\n\n  useEffect(() => {\n    if (results.data && results.data.editAuthor === null) {\n      console.log(\"wow\");\n    }\n  }, [results.data]);\n\n  if (result.loading) {\n    return <div>loading...</div>;\n  }\n\n  if (!props.show) {\n    return null;\n  }\n\n  return (\n    <div>\n      <div>\n        <h2>Authors</h2>\n        <table>\n          <tbody>\n            <tr>\n              <th></th>\n              <th>born</th>\n              <th>books</th>\n            </tr>\n            {result.data.allAuthors.map((a) => (\n              <tr key={a.name}>\n                <td>{a.name}</td>\n                <td>{a.born}</td>\n                <td>{a.bookCount}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n\n      <div>\n        <h2>Set birthyear</h2>\n\n        <form onSubmit={submit}>\n          <div>\n            <input\n              value={name}\n              onChange={({ target }) => setName(target.value)}\n              placeholder=\"name\"\n            />\n          </div>\n          <div>\n            <input\n              value={born}\n              onChange={({ target }) => setBorn(Number(target.value))}\n              placeholder=\"born\"\n            />\n          </div>\n          <br></br>\n          <button type=\"submit\">update author</button>\n        </form>\n      </div>\n    </div>\n  );\n}; //end\n\nexport default Authors;\n"]},"metadata":{},"sourceType":"module"}