{"ast":null,"code":"var _jsxFileName = \"/Users/mattimikael/fullstack-hy2021/Osa8/frontend/src/components/Authors.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { ALL_AUTHORS, EDIT_AUTHOR_BORNYEAR } from \"../queries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Authors = props => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [bornyear, setBornyear] = useState(\"\");\n  const result = useQuery(ALL_AUTHORS);\n  const [editAuthor, authors] = useMutation(EDIT_AUTHOR_BORNYEAR, {\n    refetchQueries: [{\n      query: ALL_AUTHORS\n    }],\n    onError: error => {\n      props.setError(error.graphQLErrors[0].message);\n    }\n  });\n  useEffect(() => {\n    if (authors.data && authors.data.editAuthor === null) {\n      console.log(\"Something went wrong\");\n      console.log(authors.data);\n      console.log(authors.data.editAuthor);\n    }\n  }, [authors.data]);\n  if (result.loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"wait..loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 30\n  }, this);\n  if (!props.show) return null;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    editAuthor({\n      variables: {\n        name,\n        bornyear\n      }\n    });\n    setName();\n    setBornyear();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Authors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"born\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"books\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), result.data.allAuthors.map(a => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: a.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: a.born\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: a.bookCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this)]\n          }, a.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Set birthyear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            value: name,\n            onChange: ({\n              target\n            }) => setName(target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: null,\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), result.data.allAuthors.map(a => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: a.name,\n              children: a.name\n            }, a.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            value: bornyear,\n            onChange: ({\n              target\n            }) => setBornyear(Number(target.value)),\n            placeholder: \"set year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"update author\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}; //end\n\n\n_s(Authors, \"jo2Td3BMYJDKLV8q/5MbosQEZmk=\", false, function () {\n  return [useQuery, useMutation];\n});\n\n_c = Authors;\nexport default Authors;\n\nvar _c;\n\n$RefreshReg$(_c, \"Authors\");","map":{"version":3,"sources":["/Users/mattimikael/fullstack-hy2021/Osa8/frontend/src/components/Authors.js"],"names":["React","useState","useEffect","useMutation","useQuery","ALL_AUTHORS","EDIT_AUTHOR_BORNYEAR","Authors","props","name","setName","bornyear","setBornyear","result","editAuthor","authors","refetchQueries","query","onError","error","setError","graphQLErrors","message","data","console","log","loading","show","handleSubmit","event","preventDefault","variables","allAuthors","map","a","born","bookCount","target","value","Number"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { ALL_AUTHORS, EDIT_AUTHOR_BORNYEAR } from \"../queries\";\n\nconst Authors = (props) => {\n  const [name, setName] = useState(\"\");\n  const [bornyear, setBornyear] = useState(\"\");\n\n  const result = useQuery(ALL_AUTHORS);\n\n  const [editAuthor, authors] = useMutation(EDIT_AUTHOR_BORNYEAR, {\n    refetchQueries: [{ query: ALL_AUTHORS }],\n    onError: (error) => {\n      props.setError(error.graphQLErrors[0].message);\n    },\n  });\n\n  useEffect(() => {\n    if (authors.data && authors.data.editAuthor === null) {\n      console.log(\"Something went wrong\");\n      console.log(authors.data);\n      console.log(authors.data.editAuthor);\n    }\n  }, [authors.data]);\n\n  if (result.loading) return <div>wait..loading...</div>;\n\n  if (!props.show) return null;\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    editAuthor({ variables: { name, bornyear } });\n    setName();\n    setBornyear();\n  };\n\n  return (\n    <div>\n      <div>\n        <h2>Authors</h2>\n        <table>\n          <tbody>\n            <tr>\n              <th>name</th>\n              <th>born</th>\n              <th>books</th>\n            </tr>\n            {result.data.allAuthors.map((a) => (\n              <tr key={a.name}>\n                <td>{a.name}</td>\n                <td>{a.born}</td>\n                <td>{a.bookCount}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n\n      <div>\n        <h3>Set birthyear</h3>\n        <form onSubmit={handleSubmit}>\n          <div>\n            <select\n              value={name}\n              onChange={({ target }) => setName(target.value)}\n            >\n              <option value={null}> </option>\n              {result.data.allAuthors.map((a) => (\n                <option key={a.name} value={a.name}>\n                  {a.name}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div>\n            <input\n              value={bornyear}\n              onChange={({ target }) => setBornyear(Number(target.value))}\n              placeholder=\"set year\"\n            />\n          </div>\n          <br></br>\n          <button type=\"submit\">update author</button>\n        </form>\n      </div>\n    </div>\n  );\n}; //end\n\nexport default Authors;\n"]},"metadata":{},"sourceType":"module"}