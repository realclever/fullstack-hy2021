{"ast":null,"code":"var _jsxFileName = \"/Users/mattimikael/fullstack-hy2021/Osa8/frontend/src/components/Books.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { ALL_BOOKS } from \"../queries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Books = props => {\n  _s();\n\n  const [genreFilter, setgenreFilter] = useState();\n  const result = useQuery(ALL_BOOKS);\n\n  if (result.loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n\n  let genresList = [];\n  result.data.allBooks.map(b => b.genres.forEach(genre => {\n    genresList.push(genre);\n    genresList = b = [...new Set(b)];\n  }));\n\n  if (!props.show) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Books\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"placeholder \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      cellSpacing: \"5\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"published\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"genres\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), result.data.allBooks.map(a => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", a.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.author.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.published\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [a.genres.join(\", \"), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)]\n        }, a.title, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setgenreFilter(null),\n      children: \"all\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), genresList.map(g => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setgenreFilter(g),\n      value: g,\n      children: g\n    }, g, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Books, \"uIaP5DiJEUzNkpd94DH0JB4NETs=\", false, function () {\n  return [useQuery];\n});\n\n_c = Books;\nexport default Books;\n\nvar _c;\n\n$RefreshReg$(_c, \"Books\");","map":{"version":3,"sources":["/Users/mattimikael/fullstack-hy2021/Osa8/frontend/src/components/Books.js"],"names":["React","useState","useQuery","ALL_BOOKS","Books","props","genreFilter","setgenreFilter","result","loading","genresList","data","allBooks","map","b","genres","forEach","genre","push","Set","show","a","title","author","name","published","join","g"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,SAAT,QAA0B,YAA1B;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,EAA9C;AAEA,QAAMO,MAAM,GAAGN,QAAQ,CAACC,SAAD,CAAvB;;AAEA,MAAIK,MAAM,CAACC,OAAX,EAAoB;AAClB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAIC,UAAU,GAAG,EAAjB;AACAF,EAAAA,MAAM,CAACG,IAAP,CAAYC,QAAZ,CAAqBC,GAArB,CAA0BC,CAAD,IACvBA,CAAC,CAACC,MAAF,CAASC,OAAT,CAAkBC,KAAD,IAAW;AAC1BP,IAAAA,UAAU,CAACQ,IAAX,CAAgBD,KAAhB;AACAP,IAAAA,UAAU,GAAGI,CAAC,GAAG,CAAC,GAAG,IAAIK,GAAJ,CAAQL,CAAR,CAAJ,CAAjB;AACD,GAHD,CADF;;AAOA,MAAI,CAACT,KAAK,CAACe,IAAX,EAAiB;AACf,WAAO,IAAP;AACD;;AAED,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAME;AAAO,MAAA,WAAW,EAAC,GAAnB;AAAA,6BACE;AAAA,gCACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAOGZ,MAAM,CAACG,IAAP,CAAYC,QAAZ,CAAqBC,GAArB,CAA0BQ,CAAD,iBACxB;AAAA,kCACE;AAAA,4BAAMA,CAAC,CAACC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAKD,CAAC,CAACE,MAAF,CAASC;AAAd;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,sBAAKH,CAAC,CAACI;AAAP;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA,uBAAKJ,CAAC,CAACN,MAAF,CAASW,IAAT,CAAc,IAAd,CAAL;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA,WAASL,CAAC,CAACC,KAAX;AAAA;AAAA;AAAA;AAAA,gBADD,CAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF,eAwBE;AAAQ,MAAA,OAAO,EAAE,MAAMf,cAAc,CAAC,IAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBF,EAyBGG,UAAU,CAACG,GAAX,CAAgBc,CAAD,iBACd;AAAQ,MAAA,OAAO,EAAE,MAAMpB,cAAc,CAACoB,CAAD,CAArC;AAAkD,MAAA,KAAK,EAAEA,CAAzD;AAAA,gBACGA;AADH,OAA+CA,CAA/C;AAAA;AAAA;AAAA;AAAA,YADD,CAzBH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD,CAtDD;;GAAMvB,K;UAGWF,Q;;;KAHXE,K;AAwDN,eAAeA,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { ALL_BOOKS } from \"../queries\";\n\nconst Books = (props) => {\n  const [genreFilter, setgenreFilter] = useState();\n\n  const result = useQuery(ALL_BOOKS);\n\n  if (result.loading) {\n    return <div>loading...</div>;\n  }\n\n  let genresList = [];\n  result.data.allBooks.map((b) =>\n    b.genres.forEach((genre) => {\n      genresList.push(genre);\n      genresList = b = [...new Set(b)];\n    })\n  );\n\n  if (!props.show) {\n    return null;\n  }\n\n  return (\n    <div>\n      <h2>Books</h2>\n      <div>\n        <p>placeholder </p>\n      </div>\n\n      <table cellSpacing=\"5\">\n        <tbody>\n          <tr>\n            <th></th>\n            <th>author</th>\n            <th>published</th>\n            <th>genres</th>\n          </tr>\n          {result.data.allBooks.map((a) => (\n            <tr key={a.title}>\n              <td> {a.title}</td>\n              <td>{a.author.name}</td>\n              <td>{a.published}</td>\n              <td>{a.genres.join(\", \")} </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <button onClick={() => setgenreFilter(null)}>all</button>\n      {genresList.map((g) => (\n        <button onClick={() => setgenreFilter(g)} key={g} value={g}>\n          {g}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default Books;\n"]},"metadata":{},"sourceType":"module"}